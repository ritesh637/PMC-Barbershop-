// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import ClientBody from "./ClientBody";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en" className={`${geistSans.variable} ${geistMono.variable}`}>
//       <body suppressHydrationWarning className="antialiased">
//         <ClientBody>{children}</ClientBody>
//       </body>
//     </html>
//   );
// }

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ClientBody from "./ClientBody";

// Load fonts with variables for global CSS usage
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// SEO-optimized metadata
export const metadata: Metadata = {
  title: {
    default: "Your App Name | Best Modern Web App",
    template: "%s | Your App Name",
  },
  description:
    "Your App Name is a modern web application that helps users achieve X, Y, and Z efficiently. Built with performance and accessibility in mind.",
  keywords: [
    "Next.js",
    "Modern Web App",
    "React",
    "Web Development",
    "SEO",
    "Your App Name",
  ],
  metadataBase: new URL("https://yourdomain.com"),
  authors: [{ name: "Your Name", url: "https://yourdomain.com" }],
  openGraph: {
    title: "PMC Barbershop | Premium Barber Services in Denton, TX",
    description:
      "Discover pmcbarber.devfrend.com â€“ a blazing fast, accessible, and scalable modern web application.",
    url: "https://yourdomain.com",
    siteName: "Your App Name",
    images: [
      {
        url: "https://yourdomain.com/og-image.jpg", // Replace with your actual OG image
        width: 1200,
        height: 630,
        alt: "Your App Name preview image",
      },
    ],
    locale: "en_US",
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "Your App Name | Best Modern Web App",
    description:
      "Your App Name is designed for speed, accessibility, and SEO performance.",
    creator: "@yourhandle", // Replace with your Twitter handle
    images: ["https://yourdomain.com/og-image.jpg"],
  },
  themeColor: "#ffffff",
  manifest: "/site.webmanifest", // Optional if you have a PWA setup
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className={`${geistSans.variable} ${geistMono.variable}`}>
      <body suppressHydrationWarning className="antialiased">
        <ClientBody>{children}</ClientBody>
      </body>
    </html>
  );
}
